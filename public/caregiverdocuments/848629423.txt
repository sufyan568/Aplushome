state
task: "task-1",
      tasks: [],

addTasks = () => {
    const newtask = this.state.task;
    if (newtask) {
      console.log("New Task", newtask);
      const taskList = this.state.tasks;
      taskList.push(newtask);
      taskList.map((item) => {
        console.log("item", item);
      });
      console.log("List", taskList);
      this.setState({
        tasks: taskList,
        task: null,
      });
    } else {
      console.log("Task Field isn't Empty");
    }
  };
  removeTask = (id) => {
    console.log("task Id", id);
    const list = this.state.tasks;
    const newList = list.filter((item) => item !== id);
    console.log("List", newList);
    this.setState({ tasks: newList });
  };




            <Text style={{ color: "#7D7D7D", marginLeft: 20, marginTop: 30 }}>
              Tasks
            </Text>
            <View
              style={{
                backgroundColor: "white",
                marginLeft: 15,
                width: 328,
                height: 250,
                borderColor: "#E2E2E2",
                borderRadius: 4,
                borderWidth: 1,
                padding: 5,
                paddingHorizontal: 10,
              }}
            >
              <View style={{ flexDirection: "row" }}>
                <Input
                  placeholder="Add Task Here..."
                  style={{
                    height: 30,
                    fontSize: 15,
                  }}
                  onChangeText={(task) => this.setState({ task })}
                  value={this.state.task}
                  placeholderTextColor={"#A4A4A4"}
                />
                <TouchableOpacity
                  onPress={() => this.addTasks()}
                  style={{ margin: 3 }}
                >
                  <Text
                    style={{
                      width: 100,
                      height: 30,
                      backgroundColor: "#fff",
                      borderRadius: 25,
                      borderWidth: 0.3,
                      borderColor: "#a4a4a4",
                      textAlign: "center",
                      paddingTop: 5,
                      color: "#a4a4a4",
                    }}
                  >
                    Add Task
                    <Icon
                      name="x"
                      size={15}
                      color="#A4A4A4"
                      style={{ marginRight: 5 }}
                    />
                  </Text>
                </TouchableOpacity>
              </View>
              <View
                style={{
                  width: 300,
                  height: 190,
                  marginTop: 10,
                  flexDirection: "row",
                  flexWrap: "wrap",
                }}
              >
              
                {this.state.tasks
                  ? this.state.tasks.map((item, _id) => {
                      return (
                        <TouchableOpacity
                          key={_id}
                          style={{ margin: 3 }}
                          onPress={() => this.removeTask(item)}
                        >
                          <Text
                            style={{
                              height: 30,
                              backgroundColor: "#fff",
                              borderRadius: 25,
                              borderWidth: 0.3,
                              borderColor: "#a4a4a4",
                              textAlign: "center",
                              paddingTop: 5,
                              color: "#a4a4a4",
                              paddingHorizontal: 10,
                            }}
                          >
                            {item}
                            <Icon
                              name="x"
                              size={15}
                              color="#A4A4A4"
                              style={{ marginRight: 5 }}
                            />
                          </Text>
                        </TouchableOpacity>
                      );
                    })
                  : null}
              </View>
            </View>
